import fs from 'fs';
import fetch from 'node-fetch';
import cheerio from 'cheerio';

const searchUrl = 'https://www.collant.ru/search/?q=';
const cacheFile = 'image-cache.json';
const inputNames = new Set();

// === –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∏–º–µ–Ω–∞ —Ç–æ–≤–∞—Ä–æ–≤ ===
inputNames.add('BELLA 8');
inputNames.add('MICROFIBRA 100');

let imageCache = {};
if (fs.existsSync(cacheFile)) {
  try {
    imageCache = JSON.parse(fs.readFileSync(cacheFile, 'utf8'));
  } catch {
    console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å image-cache.json. –ù–∞—á–∏–Ω–∞–µ–º —Å –ø—É—Å—Ç–æ–≥–æ –∫—ç—à–∞.');
  }
}

async function fetchImageUrl(name) {
  try {
    const res = await fetch(`${searchUrl}${encodeURIComponent(name)}`, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (ProKolgotkiBot/1.0)'
      }
    });

    if (!res.ok) {
      console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ "${name}" ‚Äî ${res.status}`);
      return null;
    }

    const html = await res.text();
    const $ = cheerio.load(html);
    const imgEl = $('.prod-cat-item img, .product-item-detail-slider-image img').first();
    let img = imgEl.attr('src') || imgEl.attr('data-src');

    if (img && (img.includes('no_photo') || img.includes('placeholder') || !img.match(/\.(jpg|jpeg|png|gif|webp)/i))) {
      return null;
    }

    if (img?.startsWith('//')) img = 'https:' + img;
    else if (img?.startsWith('/')) img = 'https://www.collant.ru' + img;
    else if (!img?.startsWith('http')) return null;

    return img;
  } catch (err) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è "${name}": ${err.message}`);
    return null;
  }
}

const names = Array.from(inputNames);
let updated = 0;

for (let i = 0; i < names.length; i++) {
  const name = names[i];
  if (imageCache[name]) {
    console.log(`[${i + 1}/${names.length}] ‚úÖ ${name} ‚Äî —É–∂–µ –≤ –∫—ç—à–µ`);
    continue;
  }

  console.log(`[${i + 1}/${names.length}] üîç –ò—â—É —Ñ–æ—Ç–æ –¥–ª—è "${name}"...`);
  const img = await fetchImageUrl(name);
  imageCache[name] = img || 'https://via.placeholder.com/300x400?text=–ù–µ—Ç+—Ñ–æ—Ç–æ';
  updated++;

  fs.writeFileSync(cacheFile, JSON.stringify(imageCache, null, 2));
  await new Promise(r => setTimeout(r, 1000));
}

console.log(`\nüóÇ –ö—ç—à –æ–±–Ω–æ–≤–ª—ë–Ω. –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π: ${updated}`);
