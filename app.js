// app.js

const fetch = require('node-fetch');
const fs = require('fs');
const { XMLParser } = require('fast-xml-parser');

async function updateProducts() {
  try {
    console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ XML...');
    const response = await fetch('https://prokolgotki.ru/available.xml');

    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ XML: ${response.status} ${response.statusText}`);
    }

    const xmlData = await response.text();
    console.log('‚úÖ XML –ø–æ–ª—É—á–µ–Ω. –ü–∞—Ä—Å–∏–Ω–≥...');

    const parser = new XMLParser({
      ignoreAttributes: false,
      attributeNamePrefix: '',
    });
    const jsonData = parser.parse(xmlData);

    if (!jsonData.yml_catalog || !jsonData.yml_catalog.shop || !jsonData.yml_catalog.shop.offers || !jsonData.yml_catalog.shop.offers.offer) {
      throw new Error('‚ùå –°—Ç—Ä—É–∫—Ç—É—Ä–∞ XML –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è. –ù–µ—Ç offers.offer');
    }

    const offers = jsonData.yml_catalog.shop.offers.offer;

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${offers.length}. –°–æ—Ö—Ä–∞–Ω—è—é...`);

    fs.writeFileSync('products.json', JSON.stringify(offers, null, 2), 'utf8');

    console.log('üéØ –¢–æ–≤–∞—Ä—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ products.json');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:', error.message);
    process.exit(1);
  }
}

updateProducts();
